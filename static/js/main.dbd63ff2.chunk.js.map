{"version":3,"sources":["md.js","CustomizedMarkdownEditor/CustomizedMarkdownEditor.js","CustomizedMarkdownEditor/config.js","App.js","serviceWorker.js","index.js"],"names":["md","require","use","youtube","width","height","vimeo","vine","embed","prezi","CustomizedMarkdownEditor","props","language","useState","images","setImages","useDropzone","noClick","noKeyboard","multiple","accept","onDropAccepted","files","a","FileReader","readAsDataURL","data","editorRef","current","mark","length","getRootProps","getInputProps","open","isDragActive","useRef","markers","key","marker","name","title","languages","header1","type","header2","header3","header4","defaultText","bold","prefix","suffix","italic","strikethrough","blockquote","inlineCode","multipleLine","code","style","template","hr","Icon","fitted","size","unorderedList","orderedList","table","link","getConfig","onClick","map","index","e","clipboardData","items","i","indexOf","file","getAsFile","console","log","preventDefault","stopPropagation","getData","className","ref","rows","placeholder","doParse","text","render","join","onPaste","languageOptions","value","App","setLang","panes","menuItem","defaultValue","Container","Dropdown","button","floating","labeled","icon","options","find","it","onChange","Tab","menu","secondary","pointing","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dbd63ff2.chunk.js","sourcesContent":["const md = require('markdown-it')({}).use(require('markdown-it-video'),\n  {\n    youtube: { width: 640, height: 390 },\n    vimeo: { width: 500, height: 281 },\n    vine: { width: 600, height: 600, embed: 'simple' },\n    prezi: { width: 550, height: 400 },\n  },\n);\n\nexport default md;\n","import React, { useRef, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport FileReader from 'promise-file-reader';\nimport getConfig from './config';\nimport { Icon } from 'semantic-ui-react';\nimport TextareaMarkdownEditor from 'react-textarea-markdown-editor';\nimport md from '../md';\n\nfunction CustomizedMarkdownEditor (props) {\n  const { language = 'en' } = props;\n  const [images, setImages] = useState([]);\n  const { getRootProps, getInputProps, open, isDragActive } = useDropzone({\n    // Disable click and keydown behavior\n    noClick: true,\n    noKeyboard: true,\n    multiple: false,\n    accept: 'image/jpeg, image/png',\n    onDropAccepted: async (files) => {\n      const data = await FileReader.readAsDataURL(files[0]);\n      editorRef.current.mark('![', `][image${images.length + 1}]`, 'alt text');\n      setImages([...images, data]);\n    },\n  });\n  const editorRef = useRef(null);\n\n  const markers = [\n    ...getConfig(language),\n    {\n      key: 'images',\n      markers: [\n        {\n          key: 'images',\n          markers: [\n            {\n              key: 'open',\n              name: <Icon name=\"image\" fitted size=\"large\" onClick={open}/>,\n              title: 'Open file',\n              type: 'component',\n            },\n            ...images.map((data, index) => ({\n              defaultText: 'alt text',\n              key: `image${index + 1}`,\n              name: `image${index + 1}`,\n              prefix: '![',\n              suffix: `][image${index + 1}]`,\n              title: `image${index + 1}`,\n              type: 'marker',\n            })),\n          ],\n          type: 'dropdown',\n        },\n      ],\n    },\n  ];\n\n  async function onPaste (e) {\n    if (!e.clipboardData) {\n      return;\n    }\n    const items = e.clipboardData.items;\n    if (!items) {\n      return;\n    }\n    for (let i = 0; i < items.length; i++) {\n      // Skip content if not image\n      if (items[i].type.indexOf('image') === -1) continue;\n      // Retrieve image on clipboard as blob\n      const file = items[i].getAsFile();\n      console.log(items[i]);\n      if (file) {\n        e.preventDefault();\n        e.stopPropagation();\n        // File name\n        console.log(e.clipboardData.getData('Text'));\n        const data = await FileReader.readAsDataURL(file);\n        console.log(data);\n        editorRef.current.mark('![', `][image${images.length + 1}]`, 'alt text');\n        setImages([...images, data]);\n      }\n    }\n  }\n\n  return (\n    <div {...getRootProps({ className: 'dropzone' })} className={isDragActive ? 'dropping' : ''}>\n      <input {...getInputProps()} />\n      <TextareaMarkdownEditor ref={editorRef} markers={markers} language={language} rows={10}\n                              placeholder=\"You can paste or drag your image here!\"\n                              doParse={text => md.render(`${text}\\n\\n${images.map((data, index) => `[image${index + 1}]: ${data}`).join('\\n\\n')}`)}\n                              onPaste={onPaste}/>\n    </div>\n  );\n}\n\nexport default CustomizedMarkdownEditor;\n","import languages from './lang';\nimport { Icon } from 'semantic-ui-react';\nimport React from 'react';\n\nexport default function getConfig(language) {\n  return [\n    {\n      key: 'header',\n      markers: [\n        {\n          key: 'header',\n          markers: [\n            {\n              key: 'h1',\n              marker: '# ',\n              name: <b>H1</b>,\n              title: languages[language].header1,\n              type: 'line-marker',\n            },\n            {\n              key: 'h2',\n              marker: '## ',\n              name: <b>H2</b>,\n              title: languages[language].header2,\n              type: 'line-marker',\n            },\n            {\n              key: 'h3',\n              marker: '### ',\n              name: <b>H3</b>,\n              title: languages[language].header3,\n              type: 'line-marker',\n            },\n            {\n              key: 'h4',\n              marker: '#### ',\n              name: <b>H4</b>,\n              title: languages[language].header4,\n              type: 'line-marker',\n            },\n          ],\n          type: 'dropdown',\n        },\n      ],\n    },\n    {\n      key: 'text',\n      markers: [\n        {\n          key: 'text',\n          markers: [\n            {\n              defaultText: 'bold',\n              key: 'bold',\n              name: <b>{languages[language].bold}</b>,\n              prefix: '**',\n              suffix: '**',\n              title: languages[language].bold,\n              type: 'marker',\n            },\n            {\n              defaultText: 'italic',\n              key: 'italic',\n              name: <i>{languages[language].italic}</i>,\n              prefix: '*',\n              suffix: '*',\n              title: languages[language].italic,\n              type: 'marker',\n            },\n            {\n              defaultText: 'strikethrough',\n              key: 'strikethrough',\n              name: <del>{languages[language].strikethrough}</del>,\n              prefix: '~~',\n              suffix: '~~',\n              title: languages[language].strikethrough,\n              type: 'marker',\n            },\n            {\n              key: 'blockquote',\n              marker: '> ',\n              name: languages[language].blockquote,\n              title: languages[language].blockquote,\n              type: 'line-marker',\n            },\n            {\n              defaultText: 'inline code',\n              key: 'inline-code',\n              name: languages[language].inlineCode,\n              prefix: '`',\n              suffix: '`',\n              title: languages[language].inlineCode,\n              type: 'marker',\n            },\n            {\n              defaultText: 'code',\n              key: 'code',\n              multipleLine: true,\n              name: languages[language].code,\n              prefix: '```',\n              suffix: '```',\n              title: languages[language].code,\n              type: 'marker',\n            },\n            {\n              key: 'hr',\n              multipleLine: true,\n              name: <hr style={{ width: '100%' }}/>,\n              template: '---',\n              title: languages[language].hr,\n              type: 'template',\n            },\n          ],\n          type: 'dropdown',\n        },\n      ],\n    },\n    {\n      key: 'list',\n      markers: [\n        {\n          key: 'unordered-list',\n          marker: '* ',\n          name: <Icon name=\"list ul\" fitted size=\"large\"/>,\n          title: languages[language].unorderedList,\n          type: 'line-marker',\n        },\n        {\n          key: 'ordered-list',\n          marker: '1. ',\n          name: <Icon name=\"list ol\" fitted size=\"large\"/>,\n          title: languages[language].orderedList,\n          type: 'line-marker',\n        },\n        {\n          key: 'table',\n          multipleLine: true,\n          name: <Icon name=\"table\" fitted size=\"large\"/>,\n          template: `| Tables        | Are           | Cool  |\n| ------------- |:-------------:| -----:|\n| col 3 is      | right-aligned | $1600 |\n| col 2 is      | centered      |   $12 |\n| zebra stripes | are neat      |    $1 |`,\n          title: languages[language].table,\n          type: 'template',\n        },\n      ],\n    },\n    {\n      key: 'additional',\n      markers: [\n        {\n          defaultText: 'text',\n          key: 'link',\n          name: <Icon name=\"linkify\" fitted size=\"large\"/>,\n          prefix: '[',\n          suffix: '](url)',\n          title: languages[language].link,\n          type: 'marker',\n        },\n        {\n          defaultText: 'YMmdQw17TU4',\n          key: 'youtube',\n          name: <Icon name=\"youtube play\" fitted size=\"large\"/>,\n          prefix: '@[youtube](',\n          suffix: ')',\n          title: languages[language].youtube,\n          type: 'marker',\n        },\n      ],\n    },\n  ];\n}\n","import React, { useState } from 'react';\nimport './App.css';\nimport TextareaMarkdownEditor from 'react-textarea-markdown-editor';\nimport { Container, Tab, Dropdown } from 'semantic-ui-react';\nimport md from './md';\nimport CustomizedMarkdownEditor from './CustomizedMarkdownEditor';\n\nconst value = `\n# react-textarea-markdown-editor\nA highly **customizable**, **light weight** *React* markdown editor which is\n* Based on pure textarea\n* Not bundled with any markdown parser. Free free to use [markdown-it](https://www.npmjs.com/package/markdown-it), [marked](https://www.npmjs.com/package/marked) or other markdown parsers.\n* Support dropping and pasting image by customization (Please check the example)\n* Customizable menu bar\n`;\n\nconst languageOptions = [\n  { key: 'Chinese', text: '简体中文', value: 'zh' },\n  { key: 'English', text: 'English', value: 'en' },\n];\n\nfunction App () {\n  const [language, setLang] = useState('en');\n  const panes = [\n    {\n      menuItem: 'Default', render: () =>\n        <TextareaMarkdownEditor defaultValue={value} language={language} rows={10}\n                                doParse={text => md.render(text)}/>,\n    },\n    { menuItem: 'Customized', render: () => <CustomizedMarkdownEditor language={language}/> },\n  ];\n  return (\n    <Container>\n      <Dropdown\n        button\n        className='icon'\n        floating\n        labeled\n        icon='world'\n        options={languageOptions}\n        defaultValue={language}\n        text={languageOptions.find(it => it.value === language).text}\n        onChange={(e, data) => {\n          setLang(data.value);\n        }}\n      />\n      <Tab menu={{ secondary: true, pointing: true }} panes={panes}/>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'react-textarea-markdown-editor/build/TextareaMarkdownEditor.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}